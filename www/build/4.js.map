{"version":3,"sources":["../../src/pages/list-complainers/list-complainers.module.ts","../../src/pages/list-complainers/list-complainers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACS;AAOzD,IAAa,yBAAyB;IAAtC;IAAyC,CAAC;IAAD,gCAAC;AAAD,CAAC;AAA7B,yBAAyB;IALrC,+DAAQ,CAAC;QACN,YAAY,EAAE,CAAC,8EAAmB,CAAC;QACnC,OAAO,EAAE,CAAC,sEAAe,CAAC,QAAQ,CAAC,8EAAmB,CAAC,CAAC;QACxD,eAAe,EAAE,CAAC,8EAAmB,CAAC;KACzC,CAAC;GACW,yBAAyB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;ACTK;AACc;AAGc;AAC/B;AAC6B;AAOrE,IAAa,mBAAmB;IAE5B,6BAAmB,OAAsB,EAC7B,iBAAoC,EACpC,cAA8B,EAC9B,aAA4B,EAC5B,aAA4B;QAJrB,YAAO,GAAP,OAAO,CAAe;QAC7B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QALxC,eAAU,GAAsB,IAAI,KAAK,EAAc,CAAC;QAOpD,IAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QACrD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QAC7B,CAAC;IACL,CAAC;IAED,4CAAc,GAAd;QAAA,iBAMC;QALG,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,SAAS,CAC7C,cAAM,YAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,EAC3B,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC,CAAC;IACrC,CAAC;IAEO,4CAAc,GAAtB;QAAA,iBAIC;QAHG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE;aACtC,SAAS,CAAC,mBAAS,IAAI,YAAI,CAAC,UAAU,GAAG,SAAS,EAA3B,CAA2B,EAC/C,cAAM,YAAI,CAAC,UAAU,GAAG,EAAE,EAApB,CAAoB,CAAC,CAAC;IACxC,CAAC;IAEO,qCAAO,GAAf;QAAA,iBAMC;QALG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,aAAG;YACrD,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACtB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,4DAAQ,CAAC,CAAC;QAChC,CAAC,CAAC;IACN,CAAC;IAEL,0BAAC;AAAD,CAAC;AArCY,mBAAmB;IAL/B,wEAAS,EAAE;IACX,gEAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;OACG;KACvC,CAAC;wBAO0C;AA+B3C;SArCY,cAAmB","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ListComplainersPage } from \"./list-complainers\";\n\n@NgModule({\n    declarations: [ListComplainersPage],\n    imports: [IonicPageModule.forChild(ListComplainersPage)],\n    entryComponents: [ListComplainersPage]\n})\nexport class ListComplainersPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list-complainers/list-complainers.module.ts","import { Component } from '@angular/core';\nimport { NavController, IonicPage } from 'ionic-angular';\n\nimport { Complainer } from \"../../models/index\";\nimport { ComplainerService, SupportService } from \"../../shared/index\";\nimport { ChatPage } from \"../chat/chat\";\nimport { SocketService, RestAPISocket } from \"../../providers/index\";\n\n@IonicPage()\n@Component({\n    selector: 'page-list-complainers',\n    templateUrl: 'list-complainers.html',\n})\nexport class ListComplainersPage {\n    compliners: Array<Complainer> = new Array<Complainer>();\n    constructor(public navCtrl: NavController,\n        private complainerService: ComplainerService,\n        private supportService: SupportService,\n        private socketService: SocketService,\n        private restAPISocket: RestAPISocket\n    ) {\n        const supporter = this.supportService.getSupporter();\n        if (!supporter) {\n            this.navCtrl.setRoot(\"LoginPage\");\n            this.navCtrl.popToRoot();\n        }\n    }\n\n    ionViewDidLoad() {\n        this.getComplainers();\n        this.restAPISocket.init();\n        this.restAPISocket.UpdateListComplainer.subscribe(\n            () => this.getComplainers(),\n            error => console.log(error));\n    }\n\n    private getComplainers(): void {\n        this.complainerService.getListComplainers()\n            .subscribe(compliner => this.compliners = compliner,\n                () => this.compliners = []);\n    }\n\n    private getChat() {\n        this.complainerService.getFirstComplainer().subscribe(res => {\n            let data = res.json();\n            this.socketService.init(data.roomId);\n            this.navCtrl.push(ChatPage);\n        })\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list-complainers/list-complainers.ts"],"sourceRoot":""}